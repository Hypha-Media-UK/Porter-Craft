{% extends "_layout" %}

{% block content %}
    <div class="settings-page">
        <div class="settings-header">
            <h1><i class="bi bi-gear-fill"></i> System Settings</h1>
            <p class="settings-description">
                Manage staff, locations, and task categories for the Porter Management System.
            </p>
        </div>
        
        <div class="settings-navigation">
            <nav class="tab-navigation">
                <button class="tab-button active" data-tab="staff-management">
                    <i class="bi bi-people-fill"></i> Staff Management
                </button>
                <button class="tab-button" data-tab="buildings-departments">
                    <i class="bi bi-building"></i> Buildings & Departments
                </button>
                <button class="tab-button" data-tab="task-types">
                    <i class="bi bi-list-check"></i> Task Types
                </button>
            </nav>
        </div>

        <div class="tab-content">
            <!-- Staff Management Tab -->
            <div class="tab-pane active" id="staff-management">
                <div class="settings-section">
                    <div class="header-with-nav">
                        <h1>Staff Management</h1>
                        <div class="nav-links">
                            <a href="{{ siteUrl('staff') }}" class="btn">‚Üê Back to Staff Management</a>
                        </div>
                    </div>

                    <!-- Sub-tab navigation -->
                    <div class="subtabs-container">
                        <div class="subtabs">
                            <button class="subtab-button active" data-subtab="supervisors-tab">
                                <i class="bi bi-person-badge"></i> Supervisors
                            </button>
                            <button class="subtab-button" data-subtab="porters-tab">
                                <i class="bi bi-person-badge-fill"></i> Porters
                            </button>
                        </div>

                        <!-- Supervisors Sub-tab Content -->
                        <div class="subtab-content active" id="supervisors-tab">
                            <!-- Supervisors listing -->
                            <div class="supervisors-list">
                                <h2>Existing Supervisors</h2>
                                {% set supervisors = craft.entries()
                                    .section('supervisors')
                                    .orderBy('title asc')
                                    .all() %}

                                {% if supervisors|length %}
                                    <table class="supervisors-table">
                                        <thead>
                                            <tr>
                                                <th>First Name</th>
                                                <th>Surname</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            {% for supervisor in supervisors %}
                                                <tr>
                                                    <td><a href="{{ supervisor.url }}">{{ supervisor.title }}</a></td>
                                                    <td>{{ supervisor.fd_surname }}</td>
                                                </tr>
                                            {% endfor %}
                                        </tbody>
                                    </table>
                                {% else %}
                                    <p><em>No supervisors have been added yet.</em></p>
                                {% endif %}
                            </div>

                            <!-- Add supervisor form -->
                            <div class="add-supervisor-form">
                                <h2>Add New Supervisor</h2>
                                
                                {% if success is defined %}
                                    <div class="notification success">
                                        Supervisor has been saved successfully!
                                    </div>
                                {% endif %}

                                {% set entry = entry is defined ? entry : craft.entries.section('supervisors').one() ?? create('craft\\elements\\Entry') %}
                                
                                <form method="post" accept-charset="UTF-8">
                                    {{ csrfInput() }}
                                    {{ actionInput('guest-entries/save') }}
                                    {{ redirectInput('settings') }}
                                    {{ hiddenInput('sectionHandle', 'supervisors') }}
                                    {{ hiddenInput('enabled', '1') }}
                                    {{ hiddenInput('slug', '__temp_' ~ now|date('U')) }}
                                    
                                    <div class="field">
                                        <label for="title">First Name *</label>
                                        {{ input('text', 'title', entry.title, {
                                            id: 'title',
                                            required: true
                                        }) }}
                                        {% if entry is defined and entry.hasErrors('title') %}
                                            <span class="error">{{ entry.getFirstError('title') }}</span>
                                        {% endif %}
                                    </div>
                                    
                                    <div class="field">
                                        <label for="fields-fd_surname">Surname *</label>
                                        {{ input('text', 'fields[fd_surname]', entry.fd_surname, {
                                            id: 'fields-fd_surname',
                                            required: true
                                        }) }}
                                        {% if entry is defined and entry.hasErrors('fd_surname') %}
                                            <span class="error">{{ entry.getFirstError('fd_surname') }}</span>
                                        {% endif %}
                                    </div>
                                    
                                    <div class="submit">
                                        <button type="submit" class="btn success">
                                            <i class="bi bi-person-plus-fill"></i> Add Supervisor
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>

                        <!-- Porters Sub-tab Content -->
                        <div class="subtab-content" id="porters-tab">
                            <!-- Porters listing -->
                            <div class="porters-list">
                                <h2>Existing Porters</h2>
                                {% set porters = craft.entries()
                                    .section('porters')
                                    .orderBy('title asc')
                                    .all() %}

                                {% if porters|length %}
                                    <table class="porters-table">
                                        <thead>
                                            <tr>
                                                <th>First Name</th>
                                                <th>Surname</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            {% for porter in porters %}
                                                <tr>
                                                    <td><a href="{{ porter.url }}">{{ porter.title }}</a></td>
                                                    <td>{{ porter.fd_surname }}</td>
                                                </tr>
                                            {% endfor %}
                                        </tbody>
                                    </table>
                                {% else %}
                                    <p><em>No porters have been added yet.</em></p>
                                {% endif %}
                            </div>

                            <!-- Add porter form -->
                            <div class="add-porter-form">
                                <h2>Add New Porter</h2>
                                
                                {% if success is defined %}
                                    <div class="notification success">
                                        Porter has been saved successfully!
                                    </div>
                                {% endif %}

                                {% set entry = entry is defined ? entry : craft.entries.section('porters').one() ?? create('craft\\elements\\Entry') %}
                                
                                <form method="post" accept-charset="UTF-8">
                                    {{ csrfInput() }}
                                    {{ actionInput('guest-entries/save') }}
                                    {{ redirectInput('settings') }}
                                    {{ hiddenInput('sectionHandle', 'porters') }}
                                    {{ hiddenInput('enabled', '1') }}
                                    {{ hiddenInput('slug', '__temp_' ~ now|date('U')) }}
                                    
                                    <div class="field">
                                        <label for="title-porter">First Name *</label>
                                        {{ input('text', 'title', entry.title, {
                                            id: 'title-porter',
                                            required: true
                                        }) }}
                                        {% if entry is defined and entry.hasErrors('title') %}
                                            <span class="error">{{ entry.getFirstError('title') }}</span>
                                        {% endif %}
                                    </div>
                                    
                                    <div class="field">
                                        <label for="fields-fd_surname-porter">Surname *</label>
                                        {{ input('text', 'fields[fd_surname]', entry.fd_surname, {
                                            id: 'fields-fd_surname-porter',
                                            required: true
                                        }) }}
                                        {% if entry is defined and entry.hasErrors('fd_surname') %}
                                            <span class="error">{{ entry.getFirstError('fd_surname') }}</span>
                                        {% endif %}
                                    </div>
                                    
                                    <div class="submit">
                                        <button type="submit" class="btn success">
                                            <i class="bi bi-person-plus-fill"></i> Add Porter
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Buildings & Departments Tab -->
            <div class="tab-pane" id="buildings-departments">
                <div class="settings-section">

    <div class="header-with-nav">
        <h1>Locations Management</h1>
        <div class="nav-links">
            <a href="{{ siteUrl('settings') }}" class="btn">‚Üê Back to Settings</a>
        </div>
    </div>


    <div class="add-building-form">
        <h2>Add New Building</h2>
        
        {% if success is defined %}
            <div class="notification success">
                Building has been saved successfully!
            </div>
        {% endif %}

        {% set entry = entry is defined ? entry : craft.entries.section('locations').one() ?? create('craft\\elements\\Entry') %}
        
        <form method="post" accept-charset="UTF-8">
            {{ csrfInput() }}
            {{ actionInput('guest-entries/save') }}
            {{ redirectInput('settings') }}
            {{ hiddenInput('sectionHandle', 'locations') }}
            {{ hiddenInput('enabled', '1') }}
            {{ hiddenInput('slug', '__temp_' ~ now|date('U')) }}
            
            <div class="field">
                <label for="title">Building Name *</label>
                {{ input('text', 'title', entry.title, {
                    id: 'title',
                    required: true
                }) }}
                {% if entry is defined and entry.hasErrors('title') %}
                    <span class="error">{{ entry.getFirstError('title') }}</span>
                {% endif %}
            </div>
            
            <div class="submit">
                <button type="submit" class="btn success">
                    <i class="bi bi-plus-lg"></i> Add Building
                </button>
            </div>
        </form>
    </div>
    
    {# No standalone department form needed - now all inline #}

    <div class="buildings-list">
        <h2>Existing Locations</h2>
        {% set rootLocations = craft.entries()
            .section('locations')
            .level(1)
            .orderBy('title asc')
            .all() %}

        {% if rootLocations|length %}
            <div class="locations-tree">
                {% for location in rootLocations %}
                    <div class="location-item level-1" id="location-{{ location.id }}">
                        <div class="location-header">
                            <span class="location-title">{{ location.title }}</span>
                            <div class="location-actions">
                                <a href="{{ location.cpEditUrl }}" class="btn small">Edit</a>
                                <button class="btn small add-department-btn" data-parent-id="{{ location.id }}">
                                    <i class="bi bi-plus-circle"></i> Add Department
                                </button>
                            </div>
                        </div>
                        
                        {# Inline department form - initially hidden #}
                        <div class="inline-department-form" id="department-form-{{ location.id }}" style="display: none;">
                            <form method="post" accept-charset="UTF-8">
                                {{ csrfInput() }}
                                {{ actionInput('guest-entries/save') }}
                                {{ redirectInput('settings') }}
                                {{ hiddenInput('sectionHandle', 'locations') }}
                                {{ hiddenInput('enabled', '1') }}
                                {{ hiddenInput('slug', '__temp_' ~ now|date('U')) }}
                                {{ hiddenInput('parentId', location.id) }}
                                
                                <div class="field">
                                    <label for="department-title-{{ location.id }}">Department Name *</label>
                                    {{ input('text', 'title', '', {
                                        id: 'department-title-' ~ location.id,
                                        required: true,
                                        placeholder: 'Enter department name...'
                                    }) }}
                                </div>
                                
                                <div class="submit">
                                    <button type="submit" class="btn success">
                                        <i class="bi bi-plus-lg"></i> Add Department
                                    </button>
                                    <button type="button" class="btn cancel-btn" data-parent-id="{{ location.id }}">
                                        <i class="bi bi-x-lg"></i> Cancel
                                    </button>
                                </div>
                            </form>
                        </div>
                        
                        {% set childLocations = craft.entries()
                            .section('locations')
                            .descendantOf(location)
                            .level(2)
                            .orderBy('title asc')
                            .all() %}
                            
                        {% if childLocations|length %}
                            <div class="location-children">
                                {% for child in childLocations %}
                                    <div class="location-item level-2">
                                        <div class="location-header">
                                            <span class="location-title">{{ child.title }}</span>
                                            <div class="location-actions">
                                                <a href="{{ child.cpEditUrl }}" class="btn small">Edit</a>
                                            </div>
                                        </div>
                                    </div>
                                {% endfor %}
                            </div>
                        {% endif %}
                    </div>
                {% endfor %}
            </div>
        {% else %}
            <p><em>No locations have been added yet.</em></p>
        {% endif %}
    </div>

                </div>
            </div>
            
            <!-- Task Types Tab -->
            <div class="tab-pane" id="task-types">
                <div class="settings-section">
                    <div class="section-notice">
                        <p>This section will allow you to create different types of tasks that can be assigned to porters.</p>
                        <p>Task Types are not implemented in the current version.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <style>
        /* Settings Header */
        .settings-header {
            margin-bottom: 2rem;
        }
        
        .settings-header h1 {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 0.5rem;
        }
        
        .settings-description {
            color: var(--text-light);
            font-size: 1.1rem;
            margin-top: 0.5rem;
        }
        
        /* Tab Navigation */
        .settings-navigation {
            margin-bottom: 2rem;
        }
        
        .tab-navigation {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            padding: 0.5rem;
            background-color: var(--light);
            border-radius: var(--radius);
            border: 1px solid var(--border);
        }
        
        .tab-button {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1.25rem;
            background: none;
            border: none;
            font-size: 0.95rem;
            font-weight: 500;
            color: var(--text);
            border-radius: calc(var(--radius) / 2);
            cursor: pointer;
            transition: var(--transition);
        }
        
        .tab-button:hover {
            background-color: rgba(0, 0, 0, 0.05);
        }
        
        .tab-button.active {
            background-color: var(--primary);
            color: white;
        }
        
        /* Tab Content */
        .tab-content {
            padding: 0;
        }
        
        .tab-pane {
            display: none;
            animation: fadeIn 0.3s ease-in-out;
        }
        
        .tab-pane.active {
            display: block;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        /* Locations Tree Styles */
        .locations-tree {
            margin-top: 1.5rem;
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }
        
        .location-item {
            margin-bottom: 0.75rem;
            border-radius: var(--radius);
            overflow: hidden;
            transition: var(--transition);
        }
        
        .location-header {
            padding: 1rem 1.25rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: var(--background);
            border: 1px solid var(--border);
            border-radius: var(--radius);
        }
        
        .location-title {
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .level-1 .location-title:before {
            content: "\F3EA"; /* Bootstrap building icon */
            font-family: "bootstrap-icons";
            color: var(--primary);
            font-size: 1.1rem;
        }
        
        .level-2 .location-title:before {
            content: "\F1AE"; /* Bootstrap directory icon */
            font-family: "bootstrap-icons";
            color: var(--secondary);
            font-size: 1rem;
        }
        
        .location-actions {
            display: flex;
            gap: 0.5rem;
        }
        
        .location-children {
            padding: 0.5rem 0 0.5rem 2rem;
        }
        
        .level-1 {
            box-shadow: var(--shadow);
        }
        
        .level-2 {
            margin-top: 0.5rem;
            margin-bottom: 0.5rem;
            border-left: 3px solid var(--primary);
        }
        
        /* Inline department form styling */
        .inline-department-form {
            background-color: var(--light);
            border-radius: 0 0 var(--radius) var(--radius);
            padding: 1.25rem;
            margin-top: -1px;
            border: 1px solid var(--border);
            border-top: none;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease-out;
            overflow: hidden;
        }
        
        @keyframes slideDown {
            from { 
                opacity: 0;
                transform: translateY(-20px);
            }
            to { 
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .cancel-btn {
            background-color: var(--secondary);
            margin-left: 0.75rem;
        }
        
        .cancel-btn:hover {
            background-color: #4b5563;
        }
        
        /* Cards for Settings */
        .section-cards {
            display: flex;
            flex-wrap: wrap;
            gap: 1.5rem;
        }
        
        .settings-card {
            flex: 1;
            min-width: 300px;
            background-color: var(--background);
            border: 1px solid var(--border);
            border-radius: var(--radius);
            padding: 1.5rem;
            box-shadow: var(--shadow);
            transition: var(--transition);
        }
        
        .settings-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1);
        }
        
        .settings-card h2 {
            margin-top: 0;
            color: var(--primary);
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        
        .card-count {
            display: inline-flex;
            align-items: center;
            margin: 1rem 0;
            font-size: 0.9rem;
            color: var(--text-light);
            background-color: var(--light);
            padding: 0.35rem 0.75rem;
            border-radius: 2rem;
        }
        
        .card-actions {
            margin-top: 1.5rem;
            display: flex;
            gap: 0.75rem;
        }
        
        .section-notice {
            display: flex;
            background-color: #fffbeb;
            border-left: 4px solid var(--warning);
            padding: 1.25rem;
            margin: 1.5rem 0;
            border-radius: var(--radius);
        }
        
        .section-notice:before {
            content: "\F33A";
            font-family: "bootstrap-icons";
            color: var(--warning);
            font-size: 1.5rem;
            margin-right: 1rem;
            flex-shrink: 0;
        }
        
        /* Form improvements */
        .submit {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-top: 1.5rem;
        }
        
        .submit .btn {
            transition: all 0.3s ease;
        }
        
        /* Enhanced table styles */
        table a {
            color: var(--primary);
            text-decoration: none;
            font-weight: 500;
            transition: all 0.2s ease;
        }
        
        table a:hover {
            color: var(--primary-hover);
            text-decoration: underline;
        }
        
        /* Tab transitions */
        .tab-pane {
            transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
        }
        
        .tab-pane:not(.active) {
            opacity: 0;
            transform: translateY(10px);
            pointer-events: none;
        }
        
        .tab-pane.active {
            opacity: 1;
            transform: translateY(0);
        }
        
        /* Improved section headings */
        .settings-section h2 {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: var(--dark);
        }
        
        .supervisors-list h2:before {
            content: "\F4E1";
            font-family: "bootstrap-icons";
            color: var(--primary);
        }
        
        .porters-list h2:before {
            content: "\F524";
            font-family: "bootstrap-icons";
            color: var(--primary);
        }
        
        .add-supervisor-form h2:before, 
        .add-porter-form h2:before, 
        .add-building-form h2:before {
            content: "\F4FE";
            font-family: "bootstrap-icons";
            color: var(--success);
        }
        
        .buildings-list h2:before {
            content: "\F3E8";
            font-family: "bootstrap-icons";
            color: var(--primary);
        }
        
        /* Parent name styling in department form */
        .parent-name {
            color: var(--primary);
            font-weight: 500;
        }
        
        /* Subtabs Navigation */
        .subtabs-container {
            margin-top: 2rem;
        }
        
        .subtabs {
            display: flex;
            background-color: var(--light);
            border-radius: var(--radius);
            padding: 0.5rem;
            margin-bottom: 1.5rem;
            border: 1px solid var(--border);
        }
        
        .subtab-button {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.625rem 1rem;
            font-size: 0.9rem;
            font-weight: 500;
            background: none;
            border: none;
            border-radius: calc(var(--radius) / 2);
            color: var(--text);
            cursor: pointer;
            transition: var(--transition);
        }
        
        .subtab-button i {
            font-size: 1rem;
        }
        
        .subtab-button:hover {
            background-color: rgba(0, 0, 0, 0.05);
        }
        
        .subtab-button.active {
            background-color: var(--primary);
            color: white;
        }
        
        .subtab-content {
            display: none;
            animation: fadeIn 0.3s ease-in-out;
        }
        
        .subtab-content.active {
            display: block;
        }
        
        /* Success button styling */
        .btn.success {
            background-color: var(--success);
        }
        
        .btn.success:hover {
            background-color: #0ca678;
        }
    </style>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Main tab navigation with button elements
            const tabButtons = document.querySelectorAll('.tab-button');
            
            tabButtons.forEach(button => {
                button.addEventListener('click', function() {
                    // Hide all tab panes
                    document.querySelectorAll('.tab-pane').forEach(pane => {
                        pane.classList.remove('active');
                    });
                    
                    // Deactivate all tabs
                    tabButtons.forEach(btn => {
                        btn.classList.remove('active');
                    });
                    
                    // Activate clicked tab
                    this.classList.add('active');
                    
                    // Show corresponding pane
                    const targetId = this.getAttribute('data-tab');
                    document.getElementById(targetId).classList.add('active');
                });
            });
            
            // Sub-tab navigation
            const subtabButtons = document.querySelectorAll('.subtab-button');
            
            subtabButtons.forEach(button => {
                button.addEventListener('click', function() {
                    // Hide all subtab content
                    document.querySelectorAll('.subtab-content').forEach(content => {
                        content.classList.remove('active');
                    });
                    
                    // Deactivate all subtab buttons
                    subtabButtons.forEach(btn => {
                        btn.classList.remove('active');
                    });
                    
                    // Activate clicked subtab
                    this.classList.add('active');
                    
                    // Show corresponding subtab content
                    const targetId = this.getAttribute('data-subtab');
                    document.getElementById(targetId).classList.add('active');
                });
            });
            
            // Inline department form handling
            const addDepartmentButtons = document.querySelectorAll('.add-department-btn');
            
            function setupDepartmentButtons() {
                addDepartmentButtons.forEach(button => {
                    button.addEventListener('click', function(e) {
                        e.preventDefault();
                        
                        // Get parent building id
                        const parentId = this.getAttribute('data-parent-id');
                        const locationItem = document.getElementById(`location-${parentId}`);
                        const departmentForm = document.getElementById(`department-form-${parentId}`);
                        
                        // Hide any other open department forms first
                        document.querySelectorAll('.inline-department-form').forEach(form => {
                            if (form.id !== `department-form-${parentId}` && form.style.display !== 'none') {
                                form.style.display = 'none';
                            }
                        });
                        
                        // Toggle form visibility with animation
                        if (departmentForm.style.display === 'none') {
                            // Show form with animation
                            departmentForm.style.opacity = '0';
                            departmentForm.style.display = 'block';
                            departmentForm.style.height = '0';
                            
                            setTimeout(() => {
                                departmentForm.style.opacity = '1';
                                departmentForm.style.height = 'auto';
                            }, 10);
                            
                            // Focus on the input
                            setTimeout(() => {
                                departmentForm.querySelector('input[type="text"]').focus();
                            }, 300);
                        } else {
                            // Hide form with animation
                            departmentForm.style.opacity = '0';
                            
                            setTimeout(() => {
                                departmentForm.style.display = 'none';
                            }, 200);
                        }
                    });
                });
            }
            
            // Setup cancel buttons for department forms
            function setupCancelButtons() {
                document.querySelectorAll('.cancel-btn').forEach(button => {
                    button.addEventListener('click', function() {
                        const parentId = this.getAttribute('data-parent-id');
                        const departmentForm = document.getElementById(`department-form-${parentId}`);
                        
                        // Hide form with animation
                        departmentForm.style.opacity = '0';
                        
                        setTimeout(() => {
                            departmentForm.style.display = 'none';
                            departmentForm.style.opacity = '1';
                            // Clear the form input
                            departmentForm.querySelector('input[type="text"]').value = '';
                        }, 200);
                    });
                });
            }
            
            // Set up initial handlers
            setupDepartmentButtons();
            setupCancelButtons();
        });
    </script>
{% endblock %}
